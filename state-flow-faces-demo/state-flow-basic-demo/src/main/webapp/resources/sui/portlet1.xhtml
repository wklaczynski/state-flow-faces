<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:cc="http://java.sun.com/jsf/composite"
      xmlns:x="http://xmlns.ssoft.org/faces/scxml"
      xmlns:fx="http://xmlns.ssoft.org/faces/fxscxml"
      xmlns:f="http://xmlns.jcp.org/jsf/core">

    <f:metadata>
        <x:scxml id="default" initial="start">
            <x:datamodel>
                <x:data id="title" expr="This chart is generated in ui:component scxml=main"/>
                <x:data id="path"/>
                <x:data id="caption"/>
            </x:datamodel>

            <x:state id="start">
                <x:onentry>
                    <x:assign location="#{currentState.assignedTest1}" expr="I'm Seting in portlet start"/>
                    <x:assign location="#{main.assignedTest1}" expr="I'm Seting in portlet start"/>
                    <x:foreach array="#{main.logs}" item="var">
                        <x:log expr="#{var}"/>
                    </x:foreach>

                    <x:if cond="#{main.prepare()}">
                        <x:raise event="start.prepare.success"/>
                        <x:else/>
                        <x:raise event="start.prepare.failed"/>
                    </x:if>
                </x:onentry>
                <x:transition event="start.prepare.success" target="steps"/>
                <x:transition event="start.prepare.failed" target="cancel"/>
            </x:state>

            <x:state id="steps">
                <x:initial>
                    <x:transition target="step1"/>
                </x:initial>

                <x:history id="step-return">
                    <x:transition target="step1"/>
                </x:history>


                <x:state id="step1">
                    <x:onentry>
                        <x:assign location="#{currentState.assignedTest1}" expr="I'm Seting in step1"/>
                    </x:onentry>
                    <x:invoke type="facet" src="@renderer:facet1">
                    </x:invoke>
                    <x:transition event="view.action.next" target="step2"/>
                    <x:transition event="view.action.view" target="view-process"/>
                    <x:transition event="view.action.other" target="other-process"/>
                    <x:transition event="view.action.flow1" target="flow1-process"/>
                </x:state>

                <x:state id="step2">
                    <x:onentry>
                        <x:assign location="#{currentState.assignedTest1}" expr="I'm Seting in step2"/>
                    </x:onentry>
                    <x:invoke type="facet" src="@renderer:facet2">
                    </x:invoke>
                    <x:transition event="view.action.prev" target="step1"/>
                    <x:transition event="view.action.view" target="view-process"/>
                    <x:transition event="view.action.other" target="other-process"/>
                    <x:transition event="view.action.flow1" target="flow1-process"/>
                </x:state>

            </x:state>


            <x:state id="view-process">
                <x:invoke type="view" src="pages/ViewPage.xhtml"/>

                <x:transition event="view.action.cancel" target="cancel"/>
                <x:transition event="view.action.return" target="step-return"/>
                <x:transition event="view.action.start-again" target="steps"/>
            </x:state>

            <x:state id="other-process">
                <x:invoke type="scxml" src="@this#other"/>

                <x:transition event="done.invoke" cond="#{done.back eq 'return'}" target="step-return"/>
                <x:transition event="done.invoke" cond="#{done.back eq 'start'}" target="steps"/>
                <x:transition event="done.invoke" cond="#{done.back eq 'cancel'}" target="cancel"/>
                <x:transition event="done.invoke" target="steps"/>
            </x:state>

            <x:state id="flow1-process">
                <x:invoke type="scxml" src="pages/flows.xhtml#flow1"/>

                <x:transition event="done.invoke" cond="#{done.back eq 'return'}" target="step-return"/>
                <x:transition event="done.invoke" cond="#{done.back eq 'start'}" target="steps"/>
                <x:transition event="done.invoke" cond="#{done.back eq 'cancel'}" target="cancel"/>
                <x:transition event="done.invoke" target="steps"/>
            </x:state>

            <x:final id="cancel">
            </x:final>

        </x:scxml>    

        <x:scxml id="other" initial="start">

            <x:datamodel>
                <x:data id="title" expr="This chart is generated in ui:component scxml=other"/>
                <x:data id="path"/>
                <x:data id="caption"/>
            </x:datamodel>

            <x:state id="start">
                <x:onentry>
                    <x:assign location="#{currentState.assignedTest1}" expr="I'm Seting in other start"/>
                    <x:assign location="#{main.assignedTest1}" expr="I'm Seting in other start"/>
                </x:onentry>

                <x:invoke type="view" src="pages/ViewPage.xhtml"/>

                <x:transition event="view.action.cancel" target="cancel"/>
                <x:transition event="view.action.return" target="return"/>
                <x:transition event="view.action.start-again" target="start-again"/>
            </x:state>

            <x:final id="cancel">
                <x:donedata>
                    <x:param name="back" expr="cancel"/>
                </x:donedata>
            </x:final>

            <x:final id="return">
                <x:donedata>
                    <x:param name="back" expr="return"/>
                </x:donedata>
            </x:final>

            <x:final id="start-again">
                <x:donedata>
                    <x:param name="back" expr="start"/>
                </x:donedata>
            </x:final>
        </x:scxml>    
    </f:metadata>

    <cc:interface>
        <cc:attribute name="path" required="false"/>
        <cc:attribute name="caption" required="false"/>
    </cc:interface>

    <cc:implementation>
        <fx:execute name="default">
            <f:param name="path" value="#{cc.attrs.path}"/>
            <f:param name="caption" value="#{cc.attrs.caption}"/>

            <fx:renderFacet>

                <f:facet name="facet1">
                    <h:panelGrid columns="1">
                        <h:panelGroup>
                            <h3>#{chart.title}</h3>
                            Render in portlet.
                            <hr/>
                            <h:outputLabel value="#{chart.caption}"/>
                            <p/>
                            <b>Used facet:</b>
                            <p/>facet name = <i>facet1</i>
                            <p/>\#{chart.path} = <i>"#{chart.path}"</i>
                            <p/>
                            <b>Used bean main:</b>
                            <p/>\#{main.beanTitle} = <i>"#{main.beanTitle}"</i>
                            <p/>\#{main.assignedTest1} = <i>"#{main.assignedTest1}"</i>
                            <pre>This beans are in dialog scope. This beans can see data from parent and child execution.</pre>
                            <p/><b>Used bean client:</b>
                            <p/>"\#{currentState.beanTitle}" = <i>"#{currentState.beanTitle}"</i> 
                            <p/>"\#{currentState.assignedTest1}" = <i>"#{currentState.assignedTest1}"</i> 
                            <pre>This bean is in state scope in "@composite".</pre>
                            <pre>This bean can not see data from parent targets not in the common composite state or parallel.</pre>
                            <hr/>
                        </h:panelGroup>
                        <b>Test action and invoke elements.</b>
                        <h:panelGrid cellspacing="4" columns="6" style="bottom: 0px">
                            <h:commandButton
                                action="portlet-action"
                                value="Custom Portlet Action"
                                immediate="false">
                            </h:commandButton>
                            <h:commandButton
                                action="portlet-ajax-action"
                                value="Ajax Portlet Action"
                                immediate="false">
                                <f:ajax render="@form"/>
                            </h:commandButton>
                            <h:commandButton
                                action="next"
                                value="Go Next"
                                immediate="false">
                            </h:commandButton>
                            <h:commandButton
                                action="view"
                                value="Go View"
                                immediate="false">
                            </h:commandButton>
                            <h:commandButton
                                action="other"
                                value="Go Other"
                                immediate="false">
                            </h:commandButton>
                            <h:commandButton
                                action="flow1"
                                value="Go Flow1"
                                immediate="false">
                            </h:commandButton>
                        </h:panelGrid>
                    </h:panelGrid>
                </f:facet>

                <f:facet name="facet2">
                    <h:panelGrid columns="1">
                        <h:outputLabel value="#{chart.caption}"/>
                        <h:panelGroup>
                            <h3>#{chart.title}</h3>
                            Render in portlet.
                            <hr/>
                            <h:outputLabel value="#{chart.caption}"/>
                            <p/>
                            <b>Used facet:</b>
                            <p/>facet name = <i>facet2</i>
                            <p/>\#{chart.path} = <i>"#{chart.path}"</i>
                            <p/>
                            <b>Used bean main:</b>
                            <p/>\#{main.beanTitle} = <i>"#{main.beanTitle}"</i>
                            <p/>\#{main.assignedTest1} = <i>"#{main.assignedTest1}"</i>
                            <pre>This beans are in dialog scope. This beans can see data from parent and child execution.</pre>
                            <p/><b>Used bean client:</b>
                            <p/>"\#{currentState.beanTitle}" = <i>"#{currentState.beanTitle}"</i> 
                            <p/>"\#{currentState.assignedTest1}" = <i>"#{currentState.assignedTest1}"</i> 
                            <pre>This bean is in state scope in "@composite".</pre>
                            <pre>This bean can not see data from parent targets not in the common composite state or parallel.</pre>
                            <hr/>
                        </h:panelGroup>
                        <b>Test action and invoke elements.</b>
                        <h:panelGrid cellspacing="4" columns="6" style="bottom: 0px">
                            <h:commandButton
                                action="portlet-action"
                                value="Custom Portlet Action"
                                immediate="false">
                            </h:commandButton>
                            <h:commandButton
                                action="portlet-ajax-action"
                                value="Ajax Portlet Action"
                                immediate="false">
                                <f:ajax render="@form"/>
                            </h:commandButton>
                            <h:commandButton
                                action="prev"
                                value="Go Prev"
                                immediate="false">
                            </h:commandButton>
                            <h:commandButton
                                action="view"
                                value="Go View"
                                immediate="false">
                            </h:commandButton>
                            <h:commandButton
                                action="other"
                                value="Go Other"
                                immediate="false">
                            </h:commandButton>
                            <h:commandButton
                                action="flow1"
                                value="Go Flow1"
                                immediate="false">
                            </h:commandButton>
                        </h:panelGrid>
                    </h:panelGrid>
                </f:facet>

            </fx:renderFacet>

        </fx:execute>

    </cc:implementation>
</html>
