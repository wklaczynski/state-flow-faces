<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:x="http://xmlns.apache.org/faces/scxml"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:sui="http://xmlns.jcp.org/jsf/composite/sui">

    <f:metadata>
        <x:scxml id="main" initial="start">

            <x:datamodel>
                <x:data id="title" expr="Test Portlet State Flow Process"/>
                <x:data id="test_data">I'm starting process, click any button to change my state.</x:data> 
                <x:data id="test_hasnext" expr="true"/> 
                <x:data id="test_hasback" expr="false"/> 
            </x:datamodel>

            <x:state id="start">
                <x:onentry>
                    <x:assign location="#{currentState.assignedTest1}" expr="I'm Seting in start"/>
                    <x:foreach array="#{main.logs}" item="var">
                        <x:log expr="#{var}"/>
                    </x:foreach>

                    <x:if cond="#{main.prepare()}">
                        <x:raise event="start.prepare.success"/>
                        <x:else/>
                        <x:raise event="start.prepare.failed"/>
                    </x:if>
                </x:onentry>
                <x:transition event="start.prepare.success" target="step1"/>
                <x:transition event="start.prepare.failed" target="cancel"/>
            </x:state>

            <x:state id="step1">
                <x:invoke type="view" src="@this">
                </x:invoke>
                <x:transition event="error.execution" target="error"/>
                <x:transition event="view.action.cancel" target="cancel"/>
            </x:state>

            <x:state id="step2">
                <x:invoke type="view" src="@this">
                </x:invoke>
                <x:transition event="error.execution" target="error"/>
                <x:transition event="view.action.cancel" target="cancel"/>
            </x:state>
            

            <x:state id="error"> 
                <x:invoke type="scxml" src="/common/error.scxml"/>
                <x:transition event="error.invoke.cancel" target="cancel"/>
                <x:transition event="error.invoke.failed" target="cancel"/>
            </x:state>      

            <x:final id="cancel">
            </x:final>

            <x:final id="success">
            </x:final>

        </x:scxml>    

    </f:metadata>

    <h:head>
        <title>Portlet State Flow Faces</title>
        <h:outputStylesheet library="css" name="demo-style.css"  />
    </h:head>
    <h:body>
        <h1>#{chart.title}</h1>
        <hr/>
        <h:form>
            <h:panelGroup rendered="#{empty chart.title}">
                <h2>Hello, I'm not starting from flow faces :(</h2>
                <hr/>
            </h:panelGroup>
            <h:panelGroup>
                <h3>Hello, I'm in test ui:component portlet process state chat</h3>
                <p/>
                Started state chart in ui:component process state and basic state in f:metadata.
                <p/>
                <h:panelGroup>
                    <h:messages/> 
                </h:panelGroup>
                <h:panelGroup>
                    <sui:portlet1
                        caption="Test Portlet Caption"
                        path="/test/portlet"
                        >

                    </sui:portlet1>
                </h:panelGroup>
                <h:panelGroup>
                    <hr/>
                </h:panelGroup>
                <h:panelGroup id="navigation">
                    <h:panelGroup layout="block" style=" text-align: left;">
                        <h:panelGrid cellspacing="4" columns="5" style="bottom: 0px">
                            <h:commandButton
                                action="cancel"
                                value="Cancel"
                                immediate="false">
                            </h:commandButton>

                        </h:panelGrid>
                    </h:panelGroup>
                </h:panelGroup>
            </h:panelGroup>
        </h:form>
    </h:body>

</html>
